orbs:
  cypress: cypress-io/cypress@1.13.0
version: 2.1
# todo: move all ip's to env vars
# todo: make zz orb
#   - circleci_path
#   - ssh_target
#   - ssh_path
jobs:
  deploy-dev:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: eval ssh-agent -s
      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no zz@206.189.241.202 exit
      - run: ssh "$SSH_USER"@"$SSH_HOST_STAGING" "cd ~/insinger-dev/; git checkout .; git pull; git checkout ${CIRCLE_BRANCH}; yarn install;"
      - run: rsync -O -ave ssh ~/project/build zz@206.189.241.202:~/insinger-dev

  deploy-test:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: eval ssh-agent -s
      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no zz@206.189.241.202 exit
      - run: ssh "$SSH_USER"@"$SSH_HOST_STAGING" "cd ~/insinger-test/; git checkout .; git pull; git checkout ${CIRCLE_BRANCH}; yarn install;"
      - run: rsync -O -ave ssh ~/project/build zz@206.189.241.202:~/insinger-test

  deploy-storybook:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn build-storybook
      - run: eval ssh-agent -s
      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no zz@206.189.241.202 exit
      - run: rsync -O -ave ssh ~/project/storybook-static zz@206.189.241.202:~/insinger-storybook

  deploy-staging:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run: eval ssh-agent -s
      - run: sudo apt install rsync
      - run: ssh -o StrictHostKeyChecking=no zz@206.189.241.202 exit
      - run: ssh "$SSH_USER"@"$SSH_HOST_STAGING" "cd ~/insinger-staging/; git checkout .; git pull; git checkout ${CIRCLE_BRANCH}; yarn install;"
      - run: rsync -O -ave ssh ~/project/build zz@206.189.241.202:~/insinger-staging

  load_envs:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Load environment variables based on branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo 'export REACT_APP_PROJECT_URL="$REACT_APP_PROJECT_URL_STAGING"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_URL="$REACT_APP_BACKEND_URL_STAGING"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_PORT="$REACT_APP_BACKEND_PORT_STAGING"' >> $BASH_ENV
              echo 'export REACT_APP_MONGO_DB_URL="$REACT_APP_MONGO_DB_URL_STAGING"' >> $BASH_ENV
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
              echo 'export REACT_APP_PROJECT_URL="$REACT_APP_PROJECT_URL_TEST"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_URL="$REACT_APP_BACKEND_URL_TEST"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_PORT="$REACT_APP_BACKEND_PORT_TEST"' >> $BASH_ENV
              echo 'export REACT_APP_MONGO_DB_URL="$REACT_APP_MONGO_DB_URL_TEST"' >> $BASH_ENV
            else
              echo 'export REACT_APP_PROJECT_URL="$REACT_APP_PROJECT_URL_DEV"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_URL="$REACT_APP_BACKEND_URL_DEV"' >> $BASH_ENV
              echo 'export REACT_APP_BACKEND_PORT="$REACT_APP_BACKEND_PORT_DEV"' >> $BASH_ENV
              echo 'export REACT_APP_MONGO_DB_URL="$REACT_APP_MONGO_DB_URL_DEV"' >> $BASH_ENV
            fi
            source $BASH_ENV

  release:
    docker:
      - image: circleci/node:12.14.1-stretch-browsers
    working_directory: ~/project
    steps:
      - checkout
      - run: npx semantic-release

workflows:
  build-and-test:
    jobs:
      - load_envs
      - cypress/install:
          requires:
            - load_envs
          executor: cypress/base-12-6-0
          yarn: true
          build: yarn build
      # - cypress/run:
      # executor: cypress/browsers-chrome76
      # browser: chrome
      # requires:
      # - cypress/install
      # start: yarn start
      # wait-on: 'http://localhost:3000'
      # yarn: true
      # record: false
      # parallel: true
      # parallelism: 4
      # group: '4 machines'
      # post-steps:
      # - store_test_results:
      # path: cypress/results
      # - deploy-test:

      - deploy-dev:
          requires:
            - cypress/install
          filters:
            branches:
              only: /feature\/.*/
      - deploy-test:
          requires:
            - cypress/install
          filters:
            branches:
              only: develop
      - deploy-staging:
         requires:
           - cypress/install
         filters:
           branches:
             only: master
    #  - deploy-production:
    #      requires:
    #        - cypress/install
    #      filters:
    #        branches:
    #          only: master
      - deploy-storybook:
          requires:
            - cypress/install
          filters:
           branches:
             only: develop
      - release:
          requires:
            - cypress/install
          filters:
            branches:
              # only: master
              only: /feature\/.*/
